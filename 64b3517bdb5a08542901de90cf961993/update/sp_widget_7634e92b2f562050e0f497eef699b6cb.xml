<?xml version="1.0" encoding="UTF-8"?><record_update table="sp_widget">
    <sp_widget action="INSERT_OR_UPDATE">
        <category>custom</category>
        <client_script><![CDATA[api.controller=function($scope, spUtil, $rootScope) {
  /* widget controller */
  var c = this;
	
	$scope.openCombatTracker = function(){
		document.getElementById('combatTrackerExpanded').style.display = 'inline';
		document.getElementById('openCombatTrackerButton').style.display = 'none';
	}
	
	$scope.closeCombatTracker = function(){
		document.getElementById('combatTrackerExpanded').style.display = 'none';
		document.getElementById('openCombatTrackerButton').style.display = 'inline';
	}
	
	$scope.newEncounter = function(){
		c.server.get({action: 'newEncounter'}).then(function(response){
			$scope.data = response.data;
		});
	}
	
	$scope.addCombatant = function(type){
		c.server.get({action: 'addCombatant', type: type}).then(function(response){
			c.server.refresh();
		});
	}
	
	$scope.removeCombatant = function(rec){
		c.server.get({action: 'removeCombatant', sysID: rec.sysID, order:parseInt(rec.order)}).then(function(response){
			c.server.refresh();
		});
	}
	
	$scope.nextTurn = function(){
		c.server.get({action: 'nextTurn'}).then(function(response){
			c.server.refresh();
		});
	}
	
	$scope.endEncounter = function(){
		c.server.get({action: 'endEncounter'}).then(function(response){
			c.server.refresh();
		});
	}
	
	spUtil.recordWatch($scope, "x_176383_star_wars_combatant", '', function(event, data){
		spUtil.update($scope);
	});
	
	var q = 'campaign=' + $scope.data.campaign;
	spUtil.recordWatch($scope, "x_176383_star_wars_combat_tracker", q, function(event, data){
		spUtil.update($scope);
	});
};]]></client_script>
        <controller_as>c</controller_as>
        <css>.collapsed-combat-tracker-button{
	position:fixed;
  right:-85px;
  top:50%;
  transform: rotate(270deg);
  border-radius: 25px 25px 0 0px;
  padding: 10px 0 10px 0;
  background-color:black;
  border: 1px groove #e21414;
  box-shadow: 0px 0px 8px 5px darkgrey;
  z-index:10000;
}

.primary-text{
	font-size:18px;
  padding:0;
}

.secondary-text{
	padding:0;
}

#combatTrackerExpanded{
	display:none;
  background-color:black;
  border: 1px groove #e21414;
  box-shadow: 0px 0px 8px 5px darkgrey;
  border-radius:6px;
  position:fixed;
  top:10%;
  right:20px;
  width:16%;
  padding-bottom:20px;
  z-index:10000;
  overflow-y:scroll;
  max-height:800px;
}

.fa-swords-laser{
	color:#e21414;
  font-size:22px;
  padding: 10px 5px 0px 0px;
}

.close-button-container{
	padding-bottom:10px;
}

.begin-combat-button{
	border-radius:20px;
  border: 1px groove #54f403;
  box-shadow: 0px 0px 6px 2px #54f403;
  background-color:black;
  padding:5px;
  margin-bottom:20px;
}

#combatHeader{
	padding:0;
}

#combatTrackerContainer{
	margin-top:40px;
}

.add-combatants-container{
	margin-top:10px;
}

#addNPCButton{
	border-radius:20px;
  border: 1px groove #e21414;
  box-shadow: 0px 0px 8px 5px #e21414;
  background-color:transparent;
}

#addPCButton{
	border-radius:20px;
  border: 1px groove #1933f4;
  box-shadow: 0px 0px 6px 3px #1933f4;
  background-color:transparent;
}

.combatants-container{
	padding:0;
  margin-top:20px;
}

.combatant{
	padding:20px 0px 20px 0px;
  font-size:18px;
}

.combatant-type{
	text-align:left;
}

.fa-lock-alt{
	color:lightgray;
}

.fa-sword-laser-alt{
	color:#1933f4;
}

.fa-check-circle{
	color:#54f403;
}

.player-turn-icon{
	text-align:right;
}

.remove-combatant-button-container{
	text-align:right;
}

.remove-combatant-button{
  font-size:14px;
	border-radius:20px;
  border: 1px groove #e21414;
  box-shadow: 0px 0px 8px 5px #e21414;
  background-color:transparent;
}

.encounter-function-buttons-container{
	margin-top:20px;
  padding-bottom:20px;
}

.encounter-function-button{
	text-align:center;
}

#nextPlayerButton{
	border-radius:20px;
  border: 1px groove #1933f4;
  box-shadow: 0px 0px 6px 3px #1933f4;
  background-color:transparent;
}

#nextRoundButton{
	border-radius:20px;
  border: 1px groove #54f403;
  box-shadow: 0px 0px 6px 2px #54f403;
  background-color:black;
}

#endEncounterButton{
	font-size:14px;
	border-radius:20px;
  border: 1px groove #e21414;
  box-shadow: 0px 0px 8px 5px #e21414;
  background-color:transparent;
  margin-top:30px;
}

@media only screen and (min-width:762px) and (max-width:1600px){
	#combatTrackerExpanded{
    top:15%;
  	max-height:450px; 
  }
}

@media only screen and (max-width:762px){
	#combatTrackerExpanded{
    top:80px;
    left:10px;
  	max-height:700px;
    width:95%;
  }
  
  .collapsed-combat-tracker-button{
   right:-103px; 
  }
}</css>
        <data_table>sp_instance</data_table>
        <demo_data/>
        <description>Initiative tracker for SWRPG</description>
        <docs/>
        <field_list/>
        <has_preview>false</has_preview>
        <id>combat_tracker</id>
        <internal>false</internal>
        <link><![CDATA[function link(scope, element, attrs, controller) {  }]]></link>
        <name>Combat Tracker</name>
        <option_schema/>
        <public>false</public>
        <roles/>
        <script><![CDATA[(function() {
  /* populate the 'data' object */
  /* e.g., data.table = $sp.getValue('table'); */
var campaign = $sp.getParameter('campaign');
	data.campaign = campaign;
var campaignGR = new GlideRecord('x_176383_star_wars_campaign');
	campaignGR.get(campaign);
	if(campaignGR.game_master.sys_id == gs.getUserID()){
		data.isGM = true;
	} else{
		data.isGM = false;
	}
var combatTracker = new GlideRecord('x_176383_star_wars_combat_tracker');
		combatTracker.addQuery('campaign', campaign).addCondition('active', true);
		combatTracker.query();
		if(combatTracker.next()){
			data.combat = {
				inCombat: true,
				sysID: combatTracker.sys_id + '',
				round: combatTracker.round + ''
			};
		} else{
			data.combat = {
				inCombat: false,
				sysID: null,
				round: null
			};
		}

if(data.combat.inCombat){
	data.combatants = [];
	var combatants = new GlideRecord('x_176383_star_wars_combatant');
			combatants.addQuery('combat_tracker', data.combat.sysID);
			combatants.orderBy('order');
			combatants.query();
			while(combatants.next()){
				var rec = {
					sysID: combatants.sys_id + '',
					type: combatants.type + '',
					typeDisplay: combatants.type.getDisplayValue(),
					order: combatants.order + '',
					active: combatants.active,
					status: combatants.status + ''
				};
				data.combatants.push(rec);
			}				
}
	
if(input){
	if(input.action == 'newEncounter'){
		combatTracker.initialize();
		combatTracker.campaign = campaign;
		combatTracker.insert();
		data.combat.inCombat = true;
		data.combat.sysID = combatTracker.sys_id + '';
		data.combat.round = 1;
	} else if(input.action == 'addCombatant'){
		var combatant = new GlideRecord('x_176383_star_wars_combatant');
		combatant.initialize();
		combatant.combat_tracker = data.combat.sysID;
		combatant.order = data.combatants.length + 1;
		combatant.type = input.type;
		if(data.combatants.length == 0){
			combatant.status = 'going';
		}
		combatant.insert();
		var rec = {
			sysID: combatant.sys_id + '',
			type: combatant.type + '',
			typeDisplay: combatant.type.getDisplayValue(),
			order: combatant.order + '',
			active: combatant.active,
			status: combatant.status + ''
		};
		data.combatants.push(rec);
	} else if(input.action == 'removeCombatant'){
		var combatant = new GlideRecord('x_176383_star_wars_combatant');
		combatant.get(input.sysID);
		combatant.deleteRecord();
		combatant = new GlideRecord('x_176383_star_wars_combatant');
		combatant.addQuery('order', '>', input.order);
		combatant.query();
		while(combatant.next()){
			combatant.order -= 1;
			combatant.update();
		}
	} else if(input.action == 'nextTurn'){
		var combatant = new GlideRecord('x_176383_star_wars_combatant');
		combatant.addQuery('status', 'going').addCondition('combat_tracker', data.combat.sysID);
		combatant.query();
		var currentOrder;
		if(combatant.next()){
			currentOrder = combatant.order;
			combatant.status = 'gone';
			combatant.update();
			if(currentOrder < data.combatants.length){
				combatant = new GlideRecord('x_176383_star_wars_combatant');
				combatant.addQuery('order', currentOrder + 1).addCondition('combat_tracker', data.combat.sysID);
				combatant.query();
				if(combatant.next()){
					combatant.status = 'going';
					combatant.update();
				}
			} else{
				combatant = new GlideRecord('x_176383_star_wars_combatant');
				combatant.addQuery('combat_tracker', data.combat.sysID);
				combatant.orderBy('order');
				combatant.query();
				while(combatant.next()){
					if(combatant.order == 1){
						combatant.status = 'going';
					} else{
						combatant.status = 'pending';
					}
					combatant.update();
				}
				combatTracker = new GlideRecord('x_176383_star_wars_combat_tracker');
				combatTracker.get(data.combat.sysID);
				combatTracker.round ++;
				combatTracker.update();
			}
		}
	} else if(input.action == 'endEncounter'){
			combatTracker = new GlideRecord('x_176383_star_wars_combat_tracker');
			combatTracker.get(data.combat.sysID);
			combatTracker.active = false;
			combatTracker.update();
	}
}
})();]]></script>
        <servicenow>false</servicenow>
        <sys_class_name>sp_widget</sys_class_name>
        <sys_created_by>ben.fisher</sys_created_by>
        <sys_created_on>2021-02-19 03:58:41</sys_created_on>
        <sys_customer_update>false</sys_customer_update>
        <sys_id>7634e92b2f562050e0f497eef699b6cb</sys_id>
        <sys_mod_count>114</sys_mod_count>
        <sys_name>Combat Tracker</sys_name>
        <sys_package display_value="Star Wars RPG" source="x_176383_star_wars">64b3517bdb5a08542901de90cf961993</sys_package>
        <sys_policy/>
        <sys_replace_on_upgrade>false</sys_replace_on_upgrade>
        <sys_scope display_value="Star Wars RPG">64b3517bdb5a08542901de90cf961993</sys_scope>
        <sys_update_name>sp_widget_7634e92b2f562050e0f497eef699b6cb</sys_update_name>
        <sys_updated_by>ben.fisher</sys_updated_by>
        <sys_updated_on>2021-03-04 04:27:49</sys_updated_on>
        <template><![CDATA[<div class="collapsed-combat-tracker-button" id="openCombatTrackerButton" ng-click="openCombatTracker()">
  <span class="text-center primary-text col-xs-12">Combat Tracker</span>
  <span class="col-xs-12 text-center star-wars-text secondary-text">Combat Tracker</span>
</div>

<div id="combatTrackerExpanded">
  <span class="close-button-container"><i class="far fa-swords-laser pull-right" ng-click="closeCombatTracker()"></i></span>
  <span ng-if="!data.combat.inCombat && data.isGM" class="col-xs-12 start-combat-button-container text-center">
    <button class="begin-combat-button text-center" ng-click="newEncounter()">New Encounter<br/><text class="star-wars-text">New Encounter</text></button>
  </span>
  <span ng-if="!data.combat.inCombat && !data.isGM" class="col-xs-12 start-combat-button-container text-center">
    <h4>No Active Encounter<br/><text class="star-wars-text">No Active Encounter</text></h4>
  </span>
  <div ng-if="data.combat.inCombat" id="combatTrackerContainer">
    <span id="combatHeader" class="text-center">
      <h4>Encounter</h4>
      <p class="star-wars-text">Encounter</p>
      <p>Round: {{data.combat.round}}</p>
    </span>
    <span ng-if="data.isGM" class="col-xs-12 add-combatants-container text-center">
      <span class="col-xs-6 add-combatant-button">
        <button id="addNPCButton" ng-click="addCombatant('npc')">Add NPC</button>
      </span>
      <span class="col-xs-6 add-combatant-button">
        <button id="addPCButton" ng-click="addCombatant('pc')">Add PC</button>
      </span>
     </span>
     <span class="col-xs-12 combatants-container">
        <span class="col-xs-12 combatant" ng-if="c.active" ng-repeat="c in data.combatants">
          <span class="col-xs-4 combatant-detail combatant-type">{{c.typeDisplay}}</span>
          <span ng-if="data.isGM" class="col-xs-2 combatant-detail">
            <i ng-if="c.status == 'pending'" class="far fa-lock-alt"></i>
            <i ng-if="c.status == 'going'" class="fas fa-sword-laser-alt"></i>
            <i ng-if="c.status == 'gone'" class="far fa-check-circle"></i>
          </span>
          <span ng-if="!data.isGM" class="col-xs-8 player-turn-icon combatant-detail">
            <i ng-if="c.status == 'pending'" class="far fa-lock-alt"></i>
            <i ng-if="c.status == 'going'" class="fas fa-sword-laser-alt"></i>
            <i ng-if="c.status == 'gone'" class="far fa-check-circle"></i>
          </span>
          <span ng-if="data.isGM" class="col-xs-6 remove-combatant-button-container">
            <button class="remove-combatant-button" ng-click="removeCombatant(c)">Remove</button> 
          </span>
        </span>
    </span>
    <span ng-if="data.isGM" class="col-xs-12 encounter-function-buttons-container">
      <span class="col-xs-12 encounter-function-button">
        <button id="nextPlayerButton" ng-click="nextTurn()">Next Turn</button>
      </span>
      <span class="col-xs-12 encounter-function-button">
        <button id="endEncounterButton" ng-click="endEncounter()">End Encounter</button>
      </span>
    </span>
  </div>
</div>]]></template>
    </sp_widget>
</record_update>
