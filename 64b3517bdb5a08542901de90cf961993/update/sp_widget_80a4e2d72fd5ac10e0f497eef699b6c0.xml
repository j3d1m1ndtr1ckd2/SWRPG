<?xml version="1.0" encoding="UTF-8"?><record_update table="sp_widget">
    <sp_widget action="INSERT_OR_UPDATE">
        <category>custom</category>
        <client_script><![CDATA[api.controller=function($scope, $rootScope, $location) {
  /* widget controller */
  var c = this;
	
	$scope.viewCampaign = function(campaign){
		c.server.get({action: 'showCampaignDetail', campaign: campaign}).then(function(response){
			$location.search('campaign', campaign.sysID);
			$location.search('spa', 1);
			c.server.refresh();
		});
	}
	
	$scope.goBack = function(){
		$scope.data.currentCampaign = '';
		$location.search('campaign', null);
		$location.search('spa', null);
	}
	
	$scope.viewNotes = function(date){
		$scope.data.currentNotesDate = date;
	}
	
	$scope.closeNotesContainer = function(){
		$scope.data.currentNotesDate = '';
	}
	
	$scope.newCampaign = function(){
		c.server.get({action: 'newCampaign'}).then(function(response){
			$scope.data = response.data;
		});
	}
	
	$scope.closeNewCampaign = function(){
		$scope.data.createCampaign = false;
		c.server.refresh();
	}
	
	$scope.toggleNPCVisibility = function(character, showOrHide){
		c.server.get({action: 'npcVisibility', character:character, showHide: showOrHide}).then(function(response){
			c.server.refresh();
		});
	}
	
	$rootScope.$on('sp.form.submitted', function(evt, data){
		$scope.closeNewCampaign();
		c.server.refresh();
	});
	
	$scope.newSession = function(){
		c.server.get({action: 'newSession', campaignID: $scope.data.currentCampaign.sysID}).then(function(response){
			$location.search('id', 'star_wars_game_session');
			$location.search('table', 'x_176383_star_wars_game_session');
			$location.search('sys_id', response.data.activeSessionID);
			$location.search('campaign', $scope.data.currentCampaign.sysID);
		});
	}
	
	$scope.addXP = function(character){
		var elementID = 'addXP' + character.sysID;
		var xp = parseInt(document.getElementById(elementID).value);
		c.server.get({action: 'addXP', character: character, xp: xp, currentCampaign: $scope.data.currentCampaign}).then(function(response){
			$scope.viewCampaign($scope.data.currentCampaign);
		});
	}
	
};]]></client_script>
        <controller_as>c</controller_as>
        <css>.campaigns-container{
  padding-bottom:600px;
}

.panel-heading,.panel-footer{
  background-color:black;
  color:white;
}

.sw-input{
  text-align:center;
}

#addXPButton{
  background:transparent;
  padding:5px 15px 5px 15px;
  border:1px groove #54f403;
  border-radius:20px;
  box-shadow:0px 0px 6px 3px #54f403;
}

.add-xp-section{
  padding-bottom:15px;
}

.fa-swords-laser{
  color:#e21414;
  font-size:22px;
  padding: 10px 5px 0px 0px;
}

.header{
  font-size:26px;
}

.create-new-campaign{
  margin-bottom:40px;
}

.create-campaign-container{
  position:fixed;
  top:50px;
  left:10px;
  width:98%;
  animation: slideInLeft .5s;
  z-index:5;
  
  .close-button{
  	margin-bottom:1.5rem;
  }
}

.campaigns-header{
  margin-bottom:40px;
}

.back-button{
  padding:0;
  text-align:left;
  z-index:4;
  margin-top:40px;
}

#starfighterBackButton{
  transform: rotate(270deg);
  color:#e17012;
}

.campaign{
  margin-bottom:20px;
}

.campaign-body{
  text-align:center;
  background-color:black;
  border:1px groove #1933f4;
  border-radius:20px;
  box-shadow:0px 0px 6px 3px #1933f4;
  padding-top:10px;
  padding-bottom:10px;
}

.name{
  font-size:20px;
  font-weight:bold;
}

.gm{
  font-size:18px;
}

.view-campaign-button{
  margin-top:15px;
  background:transparent;
  padding:5px 15px 5px 15px;
  border:1px groove #54f403;
  border-radius:20px;
  box-shadow:0px 0px 6px 3px #54f403;
}

.detail-header{
  margin-top:20px;
  margin-bottom:20px;
  font-size:18px;
}

a{
  color:white !important;
}

a:hover{
  color:lightgray !important;
}

.character{
  background-color:black;
  margin-bottom:15px;
  border:1px groove #1933f4;
  border-radius:20px;
  box-shadow:0px 0px 6px 3px #1933f4;
  
  .species-img{
  	padding:0;
  }
}

.search-container{
  text-align:right;
  position: absolute;
  top: 40px;
  right: 5px;
}

.npc{
  padding:5px;
}

.gm-button{
	text-align:center;
  margin-bottom:1rem;
}

.visibility-button{
	background:transparent;
  padding:5px 15px 5px 15px;
  border-radius:20px;
}

.make-visible-button{
  margin-top:1rem;
	border:1px groove #d306d3;
  box-shadow:0px 0px 6px 3px #d306d3;
}

.hide-button{
  margin-top:1rem;
	border:1px groove #e21414;
  box-shadow:0px 0px 6px 3px #e21414;
}

.character-details{
  padding-top:20px;
  font-size:16px;
  text-align:center;
}

.vehicle{
  background-color:black;
  margin-bottom:15px;
  border:1px groove #1933f4;
  border-radius:20px;
  box-shadow:0px 0px 6px 3px #1933f4;
  padding-top:10px;
  padding-bottom:10px;
  text-align:center;
  font-size:16px;
}

.note-selector{
  text-align:center;
  padding:10px;
}

.date{
  font-size:18px;
}

.session-note-detail-container{
  position:fixed;
  top:100px;
  max-height:450px;
  overflow-y:scroll;
  left:60px;
  width:95%;
  background-color:black;
  border: 1px groove #54f403;
  box-shadow: 0px 0px 4px 2px #54f403;
  z-index:5;
  padding-bottom:20px;
}

.close-button-container{
  margin-top:20px;
}

.fa-times{
  margin-right:20px;
  color:#e21414;
}

.session-record-buttons{
  margin-bottom:40px;
}

.session-button{
  font-size:18px;
  color:white;
  border:1px groove #54f403;
  border-radius:20px;
  background-color:black;
  padding:8px;
  box-shadow: 0px 0px 4px 2px #54f403;
}

#campaignIdButton{
  font-size:16px;
  font-weight:bold;
  padding:15px;
  text-align:center;
}

@keyframes slideInLeft{
  from{left:1000px;opacity:0;}
  to{left:10px;opacity:1;}
}

@media only screen and (max-width:762px){
  .character-details,.character{
    padding-left:0;
    padding-right:0;
  }

  .session-note-detail-container{
    left:10px;
  }

  .active-session-button{
    margin-bottom:20px;
  }
  
  .npcs-container{
  	padding:0;
  }
  
  .search-container{
  	position:relative;
    text-align:center;
    top:initial;
    right:initial;
  }
}</css>
        <data_table>sp_instance</data_table>
        <demo_data/>
        <description/>
        <docs/>
        <field_list/>
        <has_preview>false</has_preview>
        <id>star_wars_campaigns</id>
        <internal>false</internal>
        <link><![CDATA[function link(scope, element, attrs, controller) {  }]]></link>
        <name>Star Wars Campaigns</name>
        <option_schema/>
        <public>false</public>
        <roles/>
        <script><![CDATA[(function() {
	/* populate the 'data' object */
	/* e.g., data.table = $sp.getValue('table'); */
	var userID = gs.getUserID();
	data.userID = userID;
	var characters = new GlideRecord('x_176383_star_wars_character');
	characters.addQuery('player', userID).addCondition('campaign', '!=', '');
	characters.query();
	var campaignsString = '';
	while(characters.next()){
		campaignsString += characters.campaign + ',';
	}

	data.currentCampaignID = $sp.getParameter('campaign') || '';
	data.currentCampaign = '';
	data.campaigns = [];
	var campaigns = new GlideRecord('x_176383_star_wars_campaign');
	campaigns.addQuery('game_master', userID).addOrCondition('sys_id', 'IN', campaignsString);
	campaigns.orderBy('name');
	campaigns.query();
	while(campaigns.next()){
		var campaign = {
			gm: campaigns.game_master.getDisplayValue(),
			gmID: campaigns.game_master.sys_id + '',
			sysID: campaigns.sys_id + '',
			name: campaigns.name + ''
		};
		if(data.currentCampaignID == campaigns.sys_id.toString()){
			data.currentCampaign = campaign;
		}
		data.campaigns.push(campaign);
	}

	//if we are refreshing the page after selecting a campaign, auto-populate that same campaign vs. returning to home campaign view
	if(data.currentCampaign != ''){
		data.isGm = (userID == data.currentCampaign.gmID) ? true : false;
		//retrieve all characters within the selected campaign
		data.campaignCharacters = [];
		data.npcs = [];
		var characterIDString = '';
		characters = new GlideRecord('x_176383_star_wars_character');
		characters.addQuery('campaign', data.currentCampaignID);
		characters.orderBy('name');
		characters.query();
		while(characters.next()){
			//characterIDString += characters.sys_id + ',';
			var cObj = {
				name: characters.name + '',
				player: characters.player.getDisplayValue(),
				sysID: characters.sys_id + '',
				species: characters.species.getDisplayValue(),
				speciesImg: characters.portrait + '.iix',
				career: characters.career.getDisplayValue(),
				visible: characters.visible_to_players ? true:false
			};
			if(cObj.speciesImg == '.iix'){
				cObj.speciesImg = cObj.species.toLowerCase() + '.png';
			}

			if(characters.player.sys_id != data.currentCampaign.gmID){
				data.campaignCharacters.push(cObj);
				characterIDString += characters.sys_id + ',';
			} else if(cObj.visible && !data.isGm){
				data.npcs.push(cObj);
			} else if(data.isGm){
				data.npcs.push(cObj);
				characterIDString += characters.sys_id + ',';
			}
		}

		//retrieve all vehicles assigned to a character within this campaign.
		data.campaignVehicles = [];
		var vehicles = new GlideRecord('x_176383_star_wars_character_vehicle');
		vehicles.addQuery('character', 'IN', characterIDString);
		vehicles.orderBy('name');
		vehicles.query();
		while(vehicles.next()){
			var vObj = {
				character: vehicles.character.getDisplayValue(),
				name: vehicles.name + '',
				shipName: vehicles.vehicle.ship_name + '',
				type: vehicles.vehicle.type.getDisplayValue(),
				sysID: vehicles.sys_id + ''
			};
			data.campaignVehicles.push(vObj);
		}

		//retrieve campaign session notes
		data.notes = [];
		data.noteDates = [];
		var notes = new GlideRecord('x_176383_star_wars_session_note');
		notes.addQuery('campaign', data.currentCampaignID);
		notes.orderByDesc('session_date');
		notes.orderBy('character.name');
		notes.query();
		while(notes.next()){
			var notesObj = {
				sysID: notes.sys_id + '',
				character: notes.character.getDisplayValue(),
				notes: notes.notes + '',
				date: notes.session_date + ''
			};
			if(notes.character.player == userID){
				notesObj.canEdit = true;
			} else{
				notesObj.canEdit = false;
			}
			data.notes.push(notesObj);
			if(notes.session_date.getDisplayValue() != data.noteDates[data.noteDates.length - 1]){
				data.noteDates.push(notes.session_date + '');
			}
		}
		data.hasActiveSession = false;
		var sessionGR = new GlideRecord('x_176383_star_wars_game_session');
		sessionGR.addQuery('campaign', data.currentCampaignID).addCondition('active', true);
		sessionGR.query();
		if(sessionGR.next()){
			data.hasActiveSession = true;
			data.activeSessionID = sessionGR.sys_id + '';
		}
	}


	if(input){
		if(input.action == 'showCampaignDetail'){
			data.currentCampaign = input.campaign;
			data.isGm = (userID == data.currentCampaign.gmID) ? true : false;
			//retrieve all characters within the selected campaign
			data.campaignCharacters = [];
			data.npcs = [];
			var characterIDString = '';
			characters = new GlideRecord('x_176383_star_wars_character');
			characters.addQuery('campaign', input.campaign.sysID);
			characters.orderBy('name');
			characters.query();
			while(characters.next()){
				var cObj = {
					name: characters.name + '',
					player: characters.player.getDisplayValue(),
					sysID: characters.sys_id + '',
					species: characters.species.getDisplayValue(),
					speciesImg: characters.portrait + '.iix',
					career: characters.career.getDisplayValue(),
					visible: characters.visible_to_players ? true:false
				};
				if(cObj.speciesImg == '.iix'){
					cObj.speciesImg = cObj.species.toLowerCase() + '.png';
				}

				if(characters.player.sys_id != data.currentCampaign.gmID){
					data.campaignCharacters.push(cObj);
					characterIDString += characters.sys_id + ',';
				} else if(cObj.visible && !data.isGm){
					data.npcs.push(cObj); 
				} else if(data.isGm){
					data.npcs.push(cObj);
					characterIDString += characters.sys_id + ',';
				}
			}

			//retrieve all vehicles assigned to a character within this campaign.
			data.campaignVehicles = [];
			var vehicles = new GlideRecord('x_176383_star_wars_character_vehicle');
			vehicles.addQuery('character', 'IN', characterIDString);
			vehicles.orderBy('name');
			vehicles.query();
			while(vehicles.next()){
				var vObj = {
					name: vehicles.name + '',
					shipName: vehicles.vehicle.ship_name + '',
					type: vehicles.vehicle.type.getDisplayValue(),
					sysID: vehicles.sys_id + ''
				};
				data.campaignVehicles.push(vObj);
			}

			//retrieve campaign session notes
			data.notes = [];
			data.noteDates = [];
			var notes = new GlideRecord('x_176383_star_wars_session_note');
			notes.addQuery('campaign', input.campaign.sysID);
			notes.orderByDesc('session_date');
			notes.orderBy('character.name');
			notes.query();
			while(notes.next()){
				var notesObj = {
					sysID: notes.sys_id + '',
					character: notes.character.getDisplayValue(),
					notes: notes.notes + '',
					date: notes.session_date + ''
				};
				if(notes.character.player == userID){
					notesObj.canEdit = true;
				} else{
					notesObj.canEdit = false;
				}
				data.notes.push(notesObj);
				if(notes.session_date.getDisplayValue() != data.noteDates[data.noteDates.length - 1]){
					data.noteDates.push(notes.session_date + '');
				}
			}
			data.hasActiveSession = false;
			var sessionGR = new GlideRecord('x_176383_star_wars_game_session');
			sessionGR.addQuery('campaign', input.campaign.sysID).addCondition('active', true);
			sessionGR.query();
			if(sessionGR.next()){
				data.hasActiveSession = true;
				data.activeSessionID = sessionGR.sys_id + '';
			}
		} else if(input.action == 'newCampaign'){
			var widgetFormVariables = {
				table: 'x_176383_star_wars_campaign',
				view: 'portal',
				omitHeaderOptions: true,
				sys_id: -1
			};
			data.formWidget = $sp.getWidget('widget-form', widgetFormVariables);
			data.createCampaign = true;
		} else if(input.action == 'newSession'){
			var sessionGR = new GlideRecord('x_176383_star_wars_game_session');
			sessionGR.addQuery('campaign', input.campaignID).addCondition('active', true);
			sessionGR.query();
			if(sessionGR.next()){
				sessionGR.active = false;
				sessionGR.update();
			}
			sessionGR.initialize();
			sessionGR.campaign = input.campaignID;
			sessionGR.insert();
			data.activeSessionID = sessionGR.sys_id + '';
			data.newSessionURL = '?id=star_wars_game_session&table=x_176383_star_wars_game_session&sys_id=' + sessionGR.sys_id + '&campaign=' + data.currentCampaign.sysID;
		} else if(input.action == 'addXP'){
			var character = new GlideRecord('x_176383_star_wars_character');
			character.get(input.character.sysID);
			character.available_xp += input.xp;
			character.update();
			gs.addInfoMessage(input.xp + ' XP added to ' + character.getDisplayValue());
		} else if(input.action == 'npcVisibility'){
			var character = new GlideRecord('x_176383_star_wars_character');
			character.get(input.character.sysID);
			character.visible_to_players = input.showHide;
			character.update();
		}
	}
})();]]></script>
        <servicenow>false</servicenow>
        <sys_class_name>sp_widget</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2020-12-30 20:58:45</sys_created_on>
        <sys_customer_update>false</sys_customer_update>
        <sys_id>80a4e2d72fd5ac10e0f497eef699b6c0</sys_id>
        <sys_mod_count>237</sys_mod_count>
        <sys_name>Star Wars Campaigns</sys_name>
        <sys_package display_value="Star Wars RPG" source="x_176383_star_wars">64b3517bdb5a08542901de90cf961993</sys_package>
        <sys_policy/>
        <sys_replace_on_upgrade>false</sys_replace_on_upgrade>
        <sys_scope display_value="Star Wars RPG">64b3517bdb5a08542901de90cf961993</sys_scope>
        <sys_update_name>sp_widget_80a4e2d72fd5ac10e0f497eef699b6c0</sys_update_name>
        <sys_updated_by>ben.fisher</sys_updated_by>
        <sys_updated_on>2023-02-02 20:12:12</sys_updated_on>
        <template><![CDATA[<head>
  <script src="https://kit.fontawesome.com/035f51c999.js" crossorigin="anonymous"></script>
</head>

<div class="col-xs-12 campaigns-container">
  <div class="col-xs-12 campaigns-header">
    <span class="col-xs-12 header text-center">Campaigns</span>
    <span class="col-xs-12 header star-wars-text text-center">Campaigns</span>
  </div>
  <!-- create campaign button -->
  <div ng-if="data.currentCampaign == ''" class="col-xs-12 campaign-buttons-section text-center">
    <div class="col-xs-12 col-md-4 col-md-offset-4 create-new-campaign campaign-body" ng-click="newCampaign()">New Campaign</div>
  </div>
  <!-- create campaign form container -->
  <div ng-if="data.createCampaign" class="col-xs-12 create-campaign-container">
    <span class="col-xs-12 close-button" ng-click="closeNewCampaign()"><i class="far fa-swords-laser pull-right"></i></span>
    <sp-widget widget="data.formWidget"/>
  </div>
  <!-- campaigns list -->
  <div ng-if="data.currentCampaign == ''" class="col-xs-12 campaigns-body">
    <span class="col-xs-12 col-md-4 campaign" ng-repeat="c in data.campaigns">
      <span class="col-xs-12 campaign-body">
        <span class="col-xs-12 name">{{c.name}}</span>
        <span class="col-xs-12 gm">Game Master: {{c.gm}}</span>
        <span class="col-xs-12 view-details-button-container">
          <button class="view-campaign-button" ng-click="viewCampaign(c)">View Details</button>
        </span>
      </span>
    </span>
  </div>
  <!-- campaign detail -->
  <div ng-if="data.currentCampaign != ''" class="col-xs-12 campaign-detail-body">
    <div class="col-xs-12 back-button" ng-click="goBack()">
      <i class="fad fa-starfighter fa-2x" id="starfighterBackButton"></i> <text id="backButtonText">Back</text>
    </div>
    <span class="col-xs-12 header text-center">{{data.currentCampaign.name}}<br><text class="star-wars-text">{{data.currentCampaign.name}}</text></span>
    <!-- campaign ID for GM's -->
    <div ng-if="data.currentCampaign.gmID == data.userID" id="campaignIdButton">
      <span class="col-xs-12 campaign-id-title">Campaign ID: {{data.currentCampaign.sysID}}</span>
    </div>
    <!-- session notes -->
    <span class="col-xs-12 campaign-notes">
      <span class="col-xs-12 detail-header text-center">Session Notes<br><text class="star-wars-text">Session Notes</text></span>
      <span class="col-xs-12 session-record-buttons text-center">
        <span ng-if="data.hasActiveSession" class="col-xs-12 col-md-6 active-session-button">
          <button class="session-button">
            <a href="?id=star_wars_game_session&table=x_176383_star_wars_game_session&sys_id={{data.activeSessionID}}&campaign={{data.currentCampaign.sysID}}">Active Session</a>
          </button>
        </span>
        <span ng-if="data.currentCampaign.gmID == data.userID" class="col-xs-12 col-md-6" ng-click="newSession()">
          <button class="session-button" id="newSessionButton">
            <a href="{{data.newSessionURL}}">New Session</a>
          </button>
        </span>
      </span>
      <span class="col-xs-12 col-md-2" ng-repeat="date in data.noteDates">
        <span class="col-xs-12 character note-selector">
          <span class="col-xs-12 character-detail date">{{date}}</span>
          <span class="col-xs-12 view-details-button-container">
            <button class="text-center view-campaign-button notes-button" ng-click="viewNotes(date)">View Notes</button>
          </span>
        </span>
      </span>
    </span>
    <!-- session notes details -->
    <span ng-if="data.currentNotesDate" class="session-note-detail-container">
      <span class="pull-right close-button-container"><i class="fas fa-times fa-2x" ng-click="closeNotesContainer()"></i></span>
      <span ng-if="note.date == data.currentNotesDate" class="col-xs-12 session-note" ng-repeat="note in data.notes">
        <span class="col-xs-12 note-detail date">{{note.character}}: <a href="?id=form&table=x_176383_star_wars_session_note&sys_id={{note.sysID}}" target="_blank"><i ng-if="note.canEdit" class="fas fa-pen-fancy"> Edit</i></a></span>
        <span class="col-xs-12 note-detail" ng-bind-html="note.notes"></span>
      </span>
    </span>
    <!-- characters -->
    <span class="col-xs-12 col-md-6 campaign-characters">
      <span class="col-xs-12 detail-header text-center">Characters<br><text class="star-wars-text">Characters</text></span>
      <span class="col-xs-12 character" ng-repeat="character in data.campaignCharacters">
        <span class="col-xs-3 species-img"><img src="{{character.speciesImg}}" height="150" width="130"/></span>
        <span class="col-xs-9 character-details">
          <a href="?id=star_wars_character_sheet&character_id={{character.sysID}}">
            <span class="col-xs-12 character-detail">Name: {{character.name}}</span>
            <span class="col-xs-12 character-detail">Player: {{character.player}}</span>
            <span class="col-xs-12 character-detail">Species: {{character.species}}</span>
            <span class="col-xs-12 character-detail">Career: {{character.career}}</span>
          </a>
        </span>
        <span ng-if="data.currentCampaign.gmID == data.userID" class="col-xs-12 add-xp-section text-center">
          <label for="addXP{{character.sysID}}">XP to Add:</label><br/>
          <input class="sw-input" type="text" name="addXP{{character.sysID}}" id="addXP{{character.sysID}}" inputmode="numeric" pattern="[0-9]*" value="0"/><br/>
          <button id="addXPButton" ng-click="addXP(character)">Add XP</button>
        </span>
      </span>
    </span>
    <!-- Vehicles -->
    <span class="col-xs-12 col-md-6 campaign-vehicles">
      <span class="col-xs-12 detail-header text-center">Vehicles<br><text class="star-wars-text">Vehicles</text></span>
      <span class="col-xs-12 search-container">
        <input type="text" ng-model="vehicleFilter" class="sw-input" placeholder="Filter Vehicles...">
      </span>
      <span class="col-xs-12 vehicle" ng-repeat="vehicle in data.campaignVehicles | filter:vehicleFilter">
        <a href="?id=star_wars_vehicle_sheet&vehicleID={{vehicle.sysID}}">
          <span class="col-xs-12 character-detail">Owner: {{vehicle.character}}</span>
          <span class="col-xs-12 character-detail">Ship Name: {{vehicle.name}}</span>
          <span class="col-xs-12 character-detail">Model: {{vehicle.shipName}}</span>
          <span class="col-xs-12 character-detail">Type: {{vehicle.type}}</span>
        </a>
      </span>
    </span>
    <!-- npcs -->
    <span class="col-xs-12 npcs-container">
      <span class="col-xs-12 detail-header text-center npc-header">NPCs<br><text class="star-wars-text">NPCs</text></span>
      <span class="col-xs-12 search-container">
        <input type="text" ng-model="npcFilter" class="sw-input" placeholder="Filter NPCs...">
      </span>
      <span class="col-xs-12 col-sm-6 col-md-4 col-lg-3" ng-repeat="character in data.npcs | filter: npcFilter">
        <span class="col-xs-12 character npc">
          <span class="col-xs-3 species-img"><img src="{{character.speciesImg}}" height="150" width="130"/></span>
          <span class="col-xs-9 character-details">
            <a href="?id=star_wars_character_sheet&character_id={{character.sysID}}">
              <span class="col-xs-12 character-detail">Name: {{character.name}}</span>
              <span class="col-xs-12 character-detail">Species: {{character.species}}</span>
              <span class="col-xs-12 character-detail">Career: {{character.career}}</span>
            </a>
          </span>
          <span ng-if="data.currentCampaign.gmID == data.userID" class="col-xs-12 add-xp-section text-center">
            <label for="addXP{{character.sysID}}">XP to Add:</label><br/>
            <input class="sw-input" type="text" name="addXP{{character.sysID}}" id="addXP{{character.sysID}}" inputmode="numeric" pattern="[0-9]*" value="0"/><br/>
            <button id="addXPButton" ng-click="addXP(character)">Add XP</button>
          </span>
          <span ng-if="data.isGm" class="col-xs-12 gm-button">
            <button ng-if="!character.visible" class="make-visible-button visibility-button" ng-click="toggleNPCVisibility(character, true)">Show NPC</button>
            <button ng-if="character.visible" class="hide-button visibility-button" ng-click="toggleNPCVisibility(character, false)">Hide NPC</button>
          </span>
        </span>
      </span>
    </span>
  </div>
</div>]]></template>
    </sp_widget>
</record_update>
